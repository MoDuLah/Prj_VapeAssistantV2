<UserControl x:Class="Vape_Assistant.Views.Settings_ChildView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:p="clr-namespace:Vape_Assistant.Properties"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Vape_Assistant.Views"
             Foreground="{Binding Source={x:Static p:Settings.Default}, Path=FGColor, Mode=TwoWay}"
             FontFamily="{Binding Source={x:Static p:Settings.Default}, Path=FontFam, Mode=TwoWay}"
             mc:Ignorable="d" HorizontalAlignment="Center">
    <Grid Margin="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Row 0-->
        <TextBlock Grid.Row="0" Grid.Column="0" x:Name="Lang_Label" Text="{x:Static p:Resources.Lang}" Margin="0,0,5,0"
                   HorizontalAlignment="Right" VerticalAlignment="Center"  MouseLeftButtonDown="Lang_Label_MouseLeftButtonDown"/>
        <ComboBox Grid.Row="0" Grid.Column="1" Width="150" x:Name="Settings_Language" SelectionChanged="Settings_Language_SelectionChanged">
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageDe}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageEn}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageEs}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageFr}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageGr}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageIt}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageRo}"/>
            <ComboBoxItem Content="{x:Static p:Resources.settings_LanguageRu}"/>
        </ComboBox>
        <Button Grid.Row="0" Grid.Column="2" x:Name="app_restart" Content="{x:Static p:Resources.settings_Restart}" Click="app_restart_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                    <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                            <!-- -->
                            <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                            <!---->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
        </Button>
        <!--Row 1-->
        <Separator Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Background="Gray" Margin="0,5"/>
        <!--Row 2-->
        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Settings_PurchasesPIN}"/>
        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" Margin="10,0" VerticalAlignment="Top">
            <TextBlock Text="{x:Static p:Resources.SettingsOff}" VerticalAlignment="Center"  Margin="0,0,5,0"/>
            <Slider x:Name="pin_Slider" Width="100" Maximum="1" SmallChange="1" Background="{x:Null}" Foreground="White" Cursor="SizeWE" ValueChanged="Pin_Slider_ValueChanged" IsEnabled="True"/>
            <TextBlock Text="{x:Static p:Resources.SettingsOn}" VerticalAlignment="Center" Margin="5,0,0,0"/>
        </StackPanel>
        <StackPanel x:Name="enablingPin" Orientation="Vertical" Grid.Row="2" Grid.Column="2" Grid.RowSpan="2" Visibility="Collapsed">
            <TextBlock Text="Set Pin" HorizontalAlignment="Center"/>
            <PasswordBox x:Name="enablePinCode" Margin="0,2,0,0" HorizontalContentAlignment="Center">
                <PasswordBox.ToolTip>
                    <TextBlock Text="Numberic Pins Only"/>
                </PasswordBox.ToolTip>
            </PasswordBox>
            <Button x:Name="enablingPinSubmit" Content="Submit" Margin="0,2,0,0" Click="EnablingPinSubmit_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                        <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                                <!-- -->
                                <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                                <!---->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <StackPanel x:Name="disablingPin" Orientation="Vertical" Grid.Row="2" Grid.Column="2" Grid.RowSpan="2" Visibility="Collapsed">
            <TextBlock Text="Current Pin" HorizontalAlignment="Center"/>
            <PasswordBox x:Name="disablePin_Box" Margin="0,2,0,0" HorizontalContentAlignment="Center">
                <PasswordBox.ToolTip>
                    <TextBlock Text="Numberic Pins Only"/>
                </PasswordBox.ToolTip>
            </PasswordBox>
            <Button x:Name="disablingPinSubmit" Content="Submit" Margin="0,2,0,0" Click="DisablingPinSubmit_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                        <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                                <!-- -->
                                <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                                <!---->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <Separator Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="6" Background="Gray" Margin="0,5"/>
        <TextBlock x:Name="header_db" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Center" Text="{x:Static p:Resources.backup_Header_db}"/>
        <TextBlock x:Name="header_desc" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Text="{x:Static p:Resources.backup_Header_description}"/>
        <TextBlock x:Name="header_export" Grid.Row="5" Grid.Column="2" HorizontalAlignment="Center" Text="{x:Static p:Resources.backup_Header_export}"/>
        <TextBlock x:Name="header_import" Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Center" Text="{x:Static p:Resources.backup_Header_import}"/>
        <Separator x:Name="header_seperator" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="6" Background="Gray"/>
        <ComboBox x:Name="db_selector" Grid.Row="7" Grid.Column="0" LostFocus="db_selector_LostFocus" Margin="0,5">
            <ComboBoxItem Content="Purchases"/>
            <ComboBoxItem Content="Warehouse"/>
            <ComboBoxItem Content="Recipes"/>
            <ComboBoxItem Content="hash"/>
            <ComboBoxItem Content="Juice Log"/>
        </ComboBox>
        <TextBlock x:Name="db_description" Grid.Row="7" Grid.Column="1" Text="" MaxWidth="250" MinWidth="250" TextWrapping="Wrap" Padding="20,0" FontSize="14" />
        <Button Grid.Row="7" Grid.Column="2" x:Name="export" Content="{x:Static p:Resources.Alch_Backup_ExportBtN}" HorizontalAlignment="Center" VerticalAlignment="Center" Click="Export_Click">
            <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                                        <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="0">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                                                <!-- -->
                                                <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                                                <!---->
                        </Trigger>
                     </Style.Triggers>
                 </Style>
             </Button.Style>
        </Button>
        <Button Grid.Row="7" Grid.Column="3" x:Name="fileSelect" Content="{x:Static p:Resources.Alch_Backup_SelectBtN}" HorizontalAlignment="Left" VerticalAlignment="Center" Click="FilePicker_Click">
                         <Button.Style>
                 <Style TargetType="{x:Type Button}">
                     <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                     <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                     <Setter Property="Template">
                         <Setter.Value>
                             <ControlTemplate TargetType="{x:Type Button}">
                                 <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="10,0,0,0">
                                     <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                 </Border>
                             </ControlTemplate>
                         </Setter.Value>
                     </Setter>
                     <Style.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                             <!-- -->
                             <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                             <!---->
                        </Trigger>
                     </Style.Triggers>
                 </Style>
             </Button.Style>
        </Button>
        <Button Grid.Row="7" Grid.Column="4" x:Name="filePreview" Content="{x:Static p:Resources.Alch_Backup_PreviewBtN}" IsEnabled="False" HorizontalAlignment="Right" VerticalAlignment="Center" Click="Import_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                    <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="5,0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                            <!-- -->
                            <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                            <!---->
                       </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBox Grid.Row="8" Grid.Column="0" x:Name="fileName" Visibility="Collapsed" />
        <TextBox Grid.Row="8" Grid.Column="1" x:Name="hiddenpath" Visibility="Collapsed" />
        <TextBlock Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="6" x:Name="Preview" Text="{x:Static p:Resources.Alch_Backup_PreviewData}" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Bottom"  Visibility="Collapsed"/>
        <DataGrid Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="6" x:Name="importTable" ItemsSource="{Binding}" MinWidth="300" MinHeight="300" MaxHeight="500" Visibility="Collapsed" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" Grid.IsSharedSizeScope="True" IsReadOnly="True"/>
        <Button Grid.Row="11" Grid.Column="2" Grid.ColumnSpan="2" x:Name="import_btn" Content="{x:Static p:Resources.Save_Button}" Visibility="Collapsed" Click="import_btn_Click" VerticalAlignment="Center">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColor, Mode=TwoWay}"/>
                    <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColor, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0,0,0,0" Padding="10,5" Margin="0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonBGColorHover, Mode=TwoWay}"/>
                            <!-- -->
                                               <Setter Property="Foreground" Value="{Binding Source={x:Static p:Settings.Default}, Path=ButtonFGColorHover, Mode=TwoWay}"/>
                                               <!---->
                       </Trigger>
                    </Style.Triggers>
                </Style>
             </Button.Style>
        </Button>
        <TextBox x:Name="x0" Grid.Row="11" Grid.Column="0" Visibility="Collapsed"/>
        <TextBox x:Name="x1" Grid.Row="11" Grid.Column="1" Visibility="Collapsed"/>
        <TextBox x:Name="x2" Grid.Row="11" Grid.Column="2" Visibility="Collapsed"/>
        <TextBox x:Name="x3" Grid.Row="11" Grid.Column="3" Visibility="Collapsed"/>
        <TextBox x:Name="x4" Grid.Row="11" Grid.Column="4" Visibility="Collapsed"/>
        <TextBox x:Name="x5" Grid.Row="11" Grid.Column="5" Visibility="Collapsed"/>
        <TextBox x:Name="x6" Grid.Row="12" Grid.Column="0" Visibility="Collapsed"/>
        <TextBox x:Name="x7" Grid.Row="12" Grid.Column="1" Visibility="Collapsed"/>
        <TextBox x:Name="x8" Grid.Row="12" Grid.Column="2" Visibility="Collapsed"/>
        <TextBox x:Name="x9" Grid.Row="12" Grid.Column="3" Visibility="Collapsed"/>
        <TextBox x:Name="x10" Grid.Row="12" Grid.Column="4" Visibility="Collapsed"/>
        <TextBox x:Name="x11" Grid.Row="12" Grid.Column="5" Visibility="Collapsed"/>
    </Grid>
</UserControl>
